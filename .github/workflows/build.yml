name: Build APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Android SDK
      run: |
        # Установка зависимостей
        sudo apt update
        sudo apt install -y wget unzip tar openjdk-17-jdk

        # Установка SDK
        mkdir -p $HOME/android-sdk
        export ANDROID_HOME=$HOME/android-sdk
        export ANDROID_SDK_ROOT=$ANDROID_HOME

        # Скачиваем командные инструменты SDK
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O commandlinetools-linux.zip
        unzip commandlinetools-linux.zip -d $ANDROID_HOME
        rm commandlinetools-linux.zip

        # Создаем необходимые каталоги
        mkdir -p $ANDROID_HOME/cmdline-tools/latest
        mv $ANDROID_HOME/cmdline-tools/* $ANDROID_HOME/cmdline-tools/latest/
        rmdir $ANDROID_HOME/cmdline-tools

        # Устанавливаем компоненты SDK
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "build-tools;30.0.3" "platforms;android-30" "ndk;21.4.7075529"

        # Устанавливаем пути для SDK и NDK
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/30.0.3" >> $GITHUB_PATH

    - name: Install Buildozer and dependencies
      run: |
        python3 -m pip install --upgrade pip setuptools wheel
        python3 -m pip install buildozer cython kivy kivymd plyer

    - name: Prepare Android build environment
      run: |
        # Создаем main.py, если его нет
        if [ ! -f main.py ]; then
          echo "Создаю main.py..."
          cat > main.py << 'EOF'
        from kivy.app import App
        from kivy.uix.label import Label
        from kivy.uix.button import Button
        from kivy.uix.boxlayout import BoxLayout

        class TranslatorApp(App):
            def build(self):
                layout = BoxLayout(orientation='vertical')
                label = Label(text="Translator App")
                button = Button(text="Translate")
                layout.add_widget(label)
                layout.add_widget(button)
                return layout

        if __name__ == "__main__":
            TranslatorApp().run()
        EOF
        fi

        # Инициализация buildozer
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi

    - name: Configure buildozer.spec for CI environment
      run: |
        # Обновляем настройки buildozer.spec
        sed -i 's/title = My Application/title = Translator App/' buildozer.spec
        sed -i 's/package.name = myapp/package.name = translator/' buildozer.spec
        sed -i 's/package.domain = org.example/package.domain = com.translator/' buildozer.spec

        # Настройка путей SDK и NDK
        sed -i 's|#android.sdk_path =|android.sdk_path = $ANDROID_HOME|' buildozer.spec
        sed -i 's|#android.ndk_path =|android.ndk_path = $ANDROID_HOME/ndk/21.4.7075529|' buildozer.spec
        sed -i 's|#android.ant_path =|android.ant_path = $HOME/apache-ant-1.10.12/bin/ant|' buildozer.spec

    - name: Build APK with Buildozer
      run: |
        buildozer android debug --verbose

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: translator-apk
        path: bin/*.apk
        if-no-files-found: error
