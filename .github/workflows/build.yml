name: Build APK
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Update package lists with retry
      run: |
        # Retry apt update multiple times to handle temporary repository issues
        for i in {1..3}; do
          if sudo apt update; then
            break
          else
            echo "apt update failed, retrying in 10 seconds... ($i/3)"
            sleep 10
          fi
        done
        
    - name: Install system dependencies with retry and alternatives
      run: |
        # Install dependencies with retry mechanism and alternative repositories
        sudo apt install -y --fix-missing \
          git zip unzip wget tar openjdk-17-jdk autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo6 cmake \
          libffi-dev libssl-dev python3-pip python3-venv || \
        sudo apt install -y --fix-missing --no-install-recommends \
          git zip unzip wget tar openjdk-17-jdk autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo6 cmake \
          libffi-dev libssl-dev python3-pip python3-venv
          
    - name: Set up Python environment
      run: |
        python3 -m pip install --upgrade pip setuptools wheel
        python3 -m pip install --user cython
        
    - name: Install Buildozer and dependencies
      run: |
        python3 -m pip install --user buildozer
        python3 -m pip install --user kivy kivymd plyer
        
    - name: Set up Android development environment
      run: |
        # Create Android SDK directory
        mkdir -p $HOME/android-sdk
        export ANDROID_HOME=$HOME/android-sdk
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        
        # Download and install Android command line tools
        cd $HOME
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip commandlinetools-linux-9477386_latest.zip -d $ANDROID_HOME/
        mkdir -p $ANDROID_HOME/cmdline-tools/latest
        mv $ANDROID_HOME/cmdline-tools/* $ANDROID_HOME/cmdline-tools/latest/
        
        # Set up environment variables
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/30.0.3" >> $GITHUB_PATH
        
    - name: Accept Android SDK licenses and install components
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;30.0.3"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-30"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;21.4.7075529"
        
    - name: Install Apache Ant
      run: |
        cd $HOME
        wget https://archive.apache.org/dist/ant/binaries/apache-ant-1.10.12-bin.tar.gz
        tar -xzf apache-ant-1.10.12-bin.tar.gz
        export ANT_HOME=$HOME/apache-ant-1.10.12
        echo "ANT_HOME=$ANT_HOME" >> $GITHUB_ENV
        echo "$ANT_HOME/bin" >> $GITHUB_PATH
        
    - name: Initialize buildozer configuration
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi
        
    - name: Configure buildozer for CI environment
      run: |
        # Update buildozer.spec for CI environment
        sed -i 's/#android.sdk_path =.*/android.sdk_path = \/home\/runner\/android-sdk/' buildozer.spec
        sed -i 's/#android.ndk_path =.*/android.ndk_path = \/home\/runner\/android-sdk\/ndk\/21.4.7075529/' buildozer.spec
        sed -i 's/#android.ant_path =.*/android.ant_path = \/home\/runner\/apache-ant-1.10.12\/bin\/ant/' buildozer.spec
        
    - name: Build APK with retry
      run: |
        # Build with retry mechanism
        for i in {1..2}; do
          if buildozer android debug; then
            break
          else
            echo "Build failed, cleaning and retrying... ($i/2)"
            buildozer android clean
            sleep 5
          fi
        done
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: translator-apk
        path: bin/*.apk
        if-no-files-found: error
